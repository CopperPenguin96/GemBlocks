.TH "GemBlocks.Worlds.Section" 3 "Thu Dec 19 2019" "GemBlocks" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GemBlocks.Worlds.Section \- Defines a section\&. It consists of 16 blocks in each dimension\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBGemBlocks\&.Tags\&.ITagProvider\fP, and \fBGemBlocks\&.Worlds\&.IBlockContainer\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSection\fP (\fBIBlockContainer\fP parent, int y)"
.br
.ti -1c
.RI "void \fBSetBlock\fP (\fBPosition\fP pos, \fBBlock\fP block)"
.br
.RI "Sets a block at the given position "
.ti -1c
.RI "byte \fBGetTransparency\fP (\fBPosition\fP pos)"
.br
.ti -1c
.RI "byte \fBGetSkyLight\fP (\fBPosition\fP pos)"
.br
.RI "Returns the sky light level of the block at given positon\&. If there is no block \fBWorld\&.DefaultSkyLight\fP will be returned\&. "
.ti -1c
.RI "void \fBSetSkyLight\fP (\fBPosition\fP pos, byte light)"
.br
.ti -1c
.RI "byte \fBGetSkyLightFromParent\fP (\fBIBlockContainer\fP child, \fBPosition\fP pos)"
.br
.RI "Returns the sky light level of a block that is out of bounds of the child block container\&. "
.ti -1c
.RI "void \fBSpreadSkyLight\fP (byte light)"
.br
.RI "Spreads the sky light\&. For each block that has the given light level it's adjacent blocks will be lit if their current light level is lower\&. "
.ti -1c
.RI "void \fBIncreaseSkyLight\fP (\fBPosition\fP pos, byte light)"
.br
.ti -1c
.RI "int \fBGetHighestBlock\fP (int x, int z)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "const int \fBSectionHeight\fP = 16"
.br
.RI "The height in blocks of a section "
.ti -1c
.RI "const int \fBBlocksPerSection\fP"
.br
.RI "The total number of blocks in a section "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "int \fBY\fP\fC [get]\fP"
.br
.RI "The Y-position within the chunk "
.ti -1c
.RI "int \fBBlockCount\fP = 0\fC [get]\fP"
.br
.RI "The number of blocks that are not air "
.ti -1c
.RI "Tag \fBTag\fP\fC [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Defines a section\&. It consists of 16 blocks in each dimension\&. 


.SH "Constructor & Destructor Documentation"
.PP 
.SS "GemBlocks\&.Worlds\&.Section\&.Section (\fBIBlockContainer\fP parent, int y)"

.SH "Member Function Documentation"
.PP 
.SS "int GemBlocks\&.Worlds\&.Section\&.GetHighestBlock (int x, int z)"

.SS "byte GemBlocks\&.Worlds\&.Section\&.GetSkyLight (\fBPosition\fP pos)"

.PP
Returns the sky light level of the block at given positon\&. If there is no block \fBWorld\&.DefaultSkyLight\fP will be returned\&. 
.PP
\fBParameters\fP
.RS 4
\fIpos\fP The local XYZ-coordinate
.RE
.PP
\fBReturns\fP
.RS 4
The sky light level
.RE
.PP

.PP
Implements \fBGemBlocks\&.Worlds\&.IBlockContainer\fP\&.
.SS "byte GemBlocks\&.Worlds\&.Section\&.GetSkyLightFromParent (\fBIBlockContainer\fP childBlock, \fBPosition\fP child)"

.PP
Returns the sky light level of a block that is out of bounds of the child block container\&. 
.PP
\fBParameters\fP
.RS 4
\fIchildBlock\fP The child block container
.br
\fIchild\fP The local X,Y, & Z coordinate
.RE
.PP
\fBReturns\fP
.RS 4
The sky light level
.RE
.PP

.PP
Implements \fBGemBlocks\&.Worlds\&.IBlockContainer\fP\&.
.SS "byte GemBlocks\&.Worlds\&.Section\&.GetTransparency (\fBPosition\fP pos)"

.SS "void GemBlocks\&.Worlds\&.Section\&.IncreaseSkyLight (\fBPosition\fP pos, byte light)"

.SS "void GemBlocks\&.Worlds\&.Section\&.SetBlock (\fBPosition\fP pos, \fBBlock\fP block)"

.PP
Sets a block at the given position 
.PP
\fBParameters\fP
.RS 4
\fIpos\fP The XYZ coords
.br
\fIblock\fP The block
.RE
.PP

.SS "void GemBlocks\&.Worlds\&.Section\&.SetSkyLight (\fBPosition\fP pos, byte light)"

.SS "void GemBlocks\&.Worlds\&.Section\&.SpreadSkyLight (byte light)"

.PP
Spreads the sky light\&. For each block that has the given light level it's adjacent blocks will be lit if their current light level is lower\&. 
.PP
\fBParameters\fP
.RS 4
\fIlight\fP The light level
.RE
.PP

.PP
Implements \fBGemBlocks\&.Worlds\&.IBlockContainer\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "const int GemBlocks\&.Worlds\&.Section\&.BlocksPerSection\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
=
            Chunk\&.BlocksPerChunkSide * Chunk\&.BlocksPerChunkSide * SectionHeight
.fi
.PP
The total number of blocks in a section 
.SS "const int GemBlocks\&.Worlds\&.Section\&.SectionHeight = 16\fC [static]\fP"

.PP
The height in blocks of a section 
.SH "Property Documentation"
.PP 
.SS "int GemBlocks\&.Worlds\&.Section\&.BlockCount = 0\fC [get]\fP"

.PP
The number of blocks that are not air 
.SS "Tag GemBlocks\&.Worlds\&.Section\&.Tag\fC [get]\fP"

.SS "int GemBlocks\&.Worlds\&.Section\&.Y\fC [get]\fP"

.PP
The Y-position within the chunk 

.SH "Author"
.PP 
Generated automatically by Doxygen for GemBlocks from the source code\&.
